
At the end you will need to get this:
Git 2.23+
Emacs 26.1+ (27.x is recommended)
ripgrep 11.0+
GNU Find
(Optional) fd 7.3.0+ (known as fd-find on Debian, Ubuntu & derivatives) â€“ improves performance for many file indexing commands

-

---
Install emacs26
---
add-apt-repository ppa:kelleyk/emacs
apt-get update
apt-get install emacs26

# required dependencies
apt-get install git ripgrep
# optional dependencies
apt-get install fd-find




Install emacs27
---
Download the latest source
https://ftp.gnu.org/pub/gnu/emacs/emacs-27.1.tar.gz



./configure --with-json
make

# if there are dependencies missing then install them, in my case I had install these:
apt-get install libxpm-dev libxpm4 libjpeg-dev gnutls-bin libtiff-dev libgif-dev libghc-gnutls-dev
apt-get insall libjansson-dev shellcheck


 
 
 Install git
 ---
 sudo add-apt-repository ppa:git-core/ppa
 sudo apt update
 sudo apt install git
 

 

Install ripgrep
---
curl -LO https://github.com/BurntSushi/ripgrep/releases/download/12.1.1/ripgrep_12.1.1_amd64.deb
sudo dpkg -i ripgrep_12.1.1_amd64.deb




Install fd
---
curl -LO https://github.com/sharkdp/fd/releases/download/v8.2.1/fd_8.2.1_amd64.deb
sudo dpkg -i fd_8.2.1_amd64.deb



Install emacs doom
---
git clone --depth 1 https://github.com/hlissner/doom-emacs ~/.emacs.d
~/.emacs.d/bin/doom install

#include ~/.emacs.d/bin in your PATH 
# if first time running dooms, then run:
$ doom doctor


Update doom emacs
---
$ doom upgrade     # or $ doom up
$ doom upgrade --packages     # to only upgrade packages and not Doom itself
$ doom help


$ doom sync	# this installed packages

Launch Doom Emacs first time
$ doom quickstart

Install icons to avoid weird symbols
M-x 	all-the-icons-install-fonts  		# this will install the icon font



packages.el - is where you specify the packages you want installed on top of what 
doom provides

doom install  - to have the packages to be installed





---
WORKSPACES
SPC TAB TAB   - Display tab bar
spc tab n       - new workspace
spc tab r       - assign a name
spc tab s     - save the workspace
spc tab .
spc tab []     - swith workspaces

PROCECTS
spc p p     - select a project
spc spc  - switch a file in the current Projects
spc .    -  to find a file outside current project
spc ,       - switch to a buffer in the current Project
spc b B     - switch to a buffer outside current project
spc fr      - load a recently viewed file



COMMON TASKS
spc :   - for M x
spc gg  - magit



FINDING TEXT
spc sp      - search all files in the current project
    * When you have a buffer of matches you can jump to the one your want by pressing return or press C-c C-e to edit all the files at once
    * You can then do whatever edits you want and press C-c C-c to commit, or C-c C-k to abandon your changes


s then type two chars to jump forward
S to jump backwards

gs spc  [type a word]  and you get a key to jump to it ( it is easier with simple vim / function )
  * if you add (setq avy-all-windows t) to your config.el file,  this will work across all your opened windows


UNDO

C - x u     - Show the undo tree


NAVIGATING SOURCE CODE

gd (or spc cd)   - Go to the definition of the symbol at point
gD (or spc cD)   - List references to the symbol at point
K                - To look for documentation at the symbol at point(uses Dash or Zeal docset if you have it configured)


---
How to load new packages

DOOM Modules
---

Modules are bundles of packages, configs and commands
Modules are enabled in the init.el file in the doom! block



MELPA
---




HELM
---


PROJECTS
---


HELM
---



Search across different files
---


Jump to definition
---


Projects
---

Python and LSP
---



Python to recognize my virtualenv
---


